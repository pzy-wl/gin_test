package test

import (
	"crypto/rsa"
	"crypto/x509"
	"encoding/hex"
	"encoding/pem"
	"fmt"
	model "ginTest/model"
	"testing"
)

func TestGetRsa(t *testing.T) {
	//对密码进行aes加密
	//前端本地私钥
	//pri:="7b22507269766174654b6579223a7b224e223ac2245223a36353533372c2244223ac225072696d6573223a5b3136353336343632363832333439333932353430323031373134373138333138343037313230323630393132343231323831343730383530393838383935373930303736313534393132383439313639323331313732383939323237373435303939333334313437353937383235363130303330383838343637383630363331333438333131343832353137363235383635333537373337303330343937373035313636363931333938313536363034373536373636383236333336373636373138313731343735383236313236363737363834333232393037363332333637363831303231313431383037343738333930383135383432313833363932363833373334323233393938343935303835373637363733343636303536363034363537343338363936303130373338363336333532312c3134313432373332363035373032363539333132343738303638303135323439373330353135353735383937323431383131353834393735303937343830333638373832353830323530313139383339303933343735353332383234323033303434343133383339393436323935363532333430393935313435363037303134383133313134343530363130343238363438353338313335303833383332353831303039333433353932323035373836313439393439383531383435333937393236333231373538313133343838353132373137393233343036353131323535303633313530313833343832313339383530323639313232353138353230303534313337333137313734363339303830313039303436313837303733323731313438383830303530323030333231323933333539315d2c22507265636f6d7075746564223a7b224470223a3134353438363635363636373436373738353239333131353434313439373730363739373039383930393631353833353132363436373135353532353639343234323934363838373432353431393236363738303632373436313832363533333831373932303831303538363834383136393534383635313632373037373234353335393435393831323038383430363531333937383633313833323632333838393133323238353437363334333338393739303536333837303735323634383435383538383134343831323634363030323830373633313439353336353136353935353130393032343734353932393235313537353534343236383035323631393334393632323538343037313331303930353032383336323530363333353033383731393737323533383133353536323131332c224471223a3133323433393335323635323237303236303636353739323435313632373631353932303936303937323236393934323835303639333937333132373032323136393630323539333230383437303735313631323739353838363336373534363436313034373337353535363431313931363234313434343338363535393330343337393237353833383531333038383333343534313136333937383335393237323132313932313139353739303639393534323936333836383837363437363131373935313532393530383637373038333535393537363331363334313732323334353439323332363537333637333933383439353239303738333331353139303237363535303539363134343130353533363136373735313530383432393838363739313635303635343435373534353531332c2251696e76223a32363731353836313436363838333735323336333038343439343938363136393636363633383933323237373431333838383432393937303936333534343236303339353230383835353037353837313134363539343133313536363034353736343733313835373438363032363933343436353339333933393533363531363538333734303738323432343735373536363933383339343738353538383432363336303539323439343033343037313233393534383232303432383733303138353936373333373638333733343836393132383232383737333138303637353039333331353139343033343139383233353530323038393232363232303733353038383630303339353438373536343633343737323439363931303130353730313831313433303436343633323834313530302c2243525456616c756573223a5b5d7d7d2c225075626c69634b6579223a7b224e223ac2245223a36353533377d7d"
	//aesCipher:="93222dbdcee2e294c8df161b4a09158d474117d83fc19c9265a1569452175574413a3f1706159b78e049eec0ba602213d9bfa1120cc1c9e4c26189b146f1a705836e77953c34be5a05433614dbaf7f3c15f64a3953dcf24322a64e56a254a2bc75b51b4a88c0b8edb24179e1cf96c6e9ca3d889930282869dd2fafc83452e29b9a836b03fd1db2d8bf2a2699b614e5298354186821bf5e9903bb6a196fed9c6723d6cda3d9bd9ac98ade0a7c0dde9fe873a1544533728f343a4581591129121151d707a65e8a44b422bc54e5a763dfc663c838a33f4f939e2a6020e7a7393f1846df0823dda5d1051fbf3cc48c4b9dbabc4f9d2cbca9f82bd00cb41c183cb90e"
	//aesByte,err:=hex.DecodeString(aesCipher)
	//if err!=nil{
	//	return
	//}
	//rsaPP,err:=hex.DecodeString(pri)
	//if err!=nil{
	//	return
	//}
	//rc:=new(model.RsaComponent1)
	//err=json.Unmarshal(rsaPP,rc)
	//if err!=nil{
	//	fmt.Println(err.Error())
	//	return
	//}
	//aim,err:=rc.Decrypt(aesByte)
	//if err!=nil{
	//	fmt.Println(err.Error())
	//	return
	//}
	////解密获取到aes的密钥
	//fmt.Println(string(aim))
	////最后将获取到aes的密钥对隐私信息进行加密
	////password 需要加密的隐私数据(这里拿用户名的密码作为demo)
	//password:="q1111111"
	//aesEncrypt := AesEncrypt1(password, aim)
	////aes加密后的隐私数据
	//fmt.Println(aesEncrypt)

}

func TestGetAes(t *testing.T) {
	//获取服务端aes秘钥
	//a1,a2,a3为本地公钥的分段字符串
	a1:="-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuULm5bF5D7qGX3u7xqoZ\n2yVGlLgWWcpBm6ohcAWIbHmkqWU4+XTSh8bA5KTBhwQ/Pb6jESiVIWs6MOHoxpw9"
	a2:="RjmEZx8o5X++FIZC+a0buFWE0GJvM/zDYH1W/HVqDGVjrfSfZKCC+uQ4W/9IsvwE\neymgT4vAkHzh4AyV0XnriA6DBBSm0j20vOzcKbZXLZsl5gd1Cm08LJ/1nPJCAXOU"
	a3:="8ZgfTpBievFUfPhRSkcIO42FXFvAPoybdkmo/70fNW5piWwaIk8YSU0p59GIwxkP\n6i4vLx2gLKJX1sSmG0rKSFic89QFSeSXLp4ED/8Hk/KRknOrv5Jatg6c+7ujNco3\nVwIDAQAB\n-----END PUBLIC KEY-----"
	//pri为本地私钥
	//pri:="7b22507269766174654b6579223a7b224e223ac2245223a36353533372c2244223ac225072696d6573223a5b3136353336343632363832333439333932353430323031373134373138333138343037313230323630393132343231323831343730383530393838383935373930303736313534393132383439313639323331313732383939323237373435303939333334313437353937383235363130303330383838343637383630363331333438333131343832353137363235383635333537373337303330343937373035313636363931333938313536363034373536373636383236333336373636373138313731343735383236313236363737363834333232393037363332333637363831303231313431383037343738333930383135383432313833363932363833373334323233393938343935303835373637363733343636303536363034363537343338363936303130373338363336333532312c3134313432373332363035373032363539333132343738303638303135323439373330353135353735383937323431383131353834393735303937343830333638373832353830323530313139383339303933343735353332383234323033303434343133383339393436323935363532333430393935313435363037303134383133313134343530363130343238363438353338313335303833383332353831303039333433353932323035373836313439393439383531383435333937393236333231373538313133343838353132373137393233343036353131323535303633313530313833343832313339383530323639313232353138353230303534313337333137313734363339303830313039303436313837303733323731313438383830303530323030333231323933333539315d2c22507265636f6d7075746564223a7b224470223a3134353438363635363636373436373738353239333131353434313439373730363739373039383930393631353833353132363436373135353532353639343234323934363838373432353431393236363738303632373436313832363533333831373932303831303538363834383136393534383635313632373037373234353335393435393831323038383430363531333937383633313833323632333838393133323238353437363334333338393739303536333837303735323634383435383538383134343831323634363030323830373633313439353336353136353935353130393032343734353932393235313537353534343236383035323631393334393632323538343037313331303930353032383336323530363333353033383731393737323533383133353536323131332c224471223a3133323433393335323635323237303236303636353739323435313632373631353932303936303937323236393934323835303639333937333132373032323136393630323539333230383437303735313631323739353838363336373534363436313034373337353535363431313931363234313434343338363535393330343337393237353833383531333038383333343534313136333937383335393237323132313932313139353739303639393534323936333836383837363437363131373935313532393530383637373038333535393537363331363334313732323334353439323332363537333637333933383439353239303738333331353139303237363535303539363134343130353533363136373735313530383432393838363739313635303635343435373534353531332c2251696e76223a32363731353836313436363838333735323336333038343439343938363136393636363633383933323237373431333838383432393937303936333534343236303339353230383835353037353837313134363539343133313536363034353736343733313835373438363032363933343436353339333933393533363531363538333734303738323432343735373536363933383339343738353538383432363336303539323439343033343037313233393534383232303432383733303138353936373333373638333733343836393132383232383737333138303637353039333331353139343033343139383233353530323038393232363232303733353038383630303339353438373536343633343737323439363931303130353730313831313433303436343633323834313530302c2243525456616c756573223a5b5d7d7d2c225075626c69634b6579223a7b224e223ac2245223a36353533377d7d"
	//pub为通过getRsaPubKey接口获取到的服务端的公钥
	pub:="-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwOg9+fjVKQ2/Li70BGGo\n2wUi7wxuL324p9Y9/J51+fvAEjduam+RcbdT0a+pKoIXf3RLEgw8fJl2VBfcifSc\neeHywA3O5Xc5HbFJSev8IBWCOarptuBuQYYxQ+oQXIMApoNLIu/bpYzaTVYPcauf\nFKVqhUdsLE9Cj97FTdIsjkZUY9lDNxuV9QQW60XSYizetGN6QWFJt2fDemPOvW+h\n4ZQtCor8Nu+IGsMBGcOA68V+e9tt7A3eJs8DaAwRdlAdbq38KqL849iEPQc+Vpbn\nU/LwRZdHk5sXzGuC6kVFclehrcWt/EkcNMH+Sv0F7i+Q41R2iyy2edVe4QIbnPVq\nyQIDAQAB\n-----END PUBLIC KEY-----\n"
	//第一步通过getRsaPubKey接口获取到的服务端的公钥将本地公钥分段加密，将分段加密后的三段密文作为getAesKey接口的参数
	block, _ := pem.Decode([]byte(pub))
	pub1, err := x509.ParsePKIXPublicKey(block.Bytes)
	if err!=nil{
		return
	}
	rsaPub, ok := pub1.(*rsa.PublicKey)
	if !ok{
		return
	}
	rsAcomponent := model.RsaComponent1{PrivateKey: nil, PublicKey: rsaPub}
	encrypt1,err := rsAcomponent.Encrypt([]byte(a1))
	if err!=nil{
		fmt.Println(err.Error())
		return
	}
	//第一段参数
	fmt.Println("第一段",hex.EncodeToString(encrypt1))
	encrypt2, err := rsAcomponent.Encrypt([]byte(a2))
	if err!=nil{
		fmt.Println(err.Error())
		return
	}
	//第二段参数
	fmt.Println("第二段",hex.EncodeToString(encrypt2))
	encrypt3, err := rsAcomponent.Encrypt([]byte(a3))
	if err!=nil{
		fmt.Println(err.Error())
		return
	}
	//第三段参数
	fmt.Println("第三段",hex.EncodeToString(encrypt3))
	//第二步将获取到的getAesKey接口返回的密文解密获取到aes的密钥
}
